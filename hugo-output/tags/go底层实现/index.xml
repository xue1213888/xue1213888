<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>go底层实现 - 标签 - 🏠 Xsc Study Notes</title>
        <link>https://xsc.scccc.cn/tags/go%E5%BA%95%E5%B1%82%E5%AE%9E%E7%8E%B0/</link>
        <description>go底层实现 - 标签 - 🏠 Xsc Study Notes</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>xsc@scccc.cn (Xsc)</managingEditor>
            <webMaster>xsc@scccc.cn (Xsc)</webMaster><lastBuildDate>Wed, 07 Sep 2022 10:56:00 &#43;0800</lastBuildDate><atom:link href="https://xsc.scccc.cn/tags/go%E5%BA%95%E5%B1%82%E5%AE%9E%E7%8E%B0/" rel="self" type="application/rss+xml" /><item>
    <title>5. runtime之note一次性通知事件</title>
    <link>https://xsc.scccc.cn/5.-runtime%E4%B9%8Bnote%E4%B8%80%E6%AC%A1%E6%80%A7%E9%80%9A%E7%9F%A5%E4%BA%8B%E4%BB%B6/</link>
    <pubDate>Wed, 07 Sep 2022 10:56:00 &#43;0800</pubDate>
    <author>Xsc</author>
    <guid>https://xsc.scccc.cn/5.-runtime%E4%B9%8Bnote%E4%B8%80%E6%AC%A1%E6%80%A7%E9%80%9A%E7%9F%A5%E4%BA%8B%E4%BB%B6/</guid>
    <description><![CDATA[对一次性事件进行睡眠和唤醒。在调用 notesleep 或者 notewakeup 之前，必须调用 noteclear 来初始化 note 。然后，一个线程可以调用 notesleep ，一个线程可以调用 notewakeup 一次，一点调用了 notewakeup ， notesleep 就会]]></description>
</item>
<item>
    <title>4. runtime之mutex线程锁的实现</title>
    <link>https://xsc.scccc.cn/4.-runtime%E4%B9%8Bmutex%E7%BA%BF%E7%A8%8B%E9%94%81%E7%9A%84%E5%AE%9E%E7%8E%B0/</link>
    <pubDate>Sun, 04 Sep 2022 01:39:00 &#43;0800</pubDate>
    <author>Xsc</author>
    <guid>https://xsc.scccc.cn/4.-runtime%E4%B9%8Bmutex%E7%BA%BF%E7%A8%8B%E9%94%81%E7%9A%84%E5%AE%9E%E7%8E%B0/</guid>
    <description><![CDATA[sync.Mutex 和 sync.Cond 都是对于协程 g 来说的，而 m.mOS.mutex 和 m.mOS.cond 是对线程 m 来说的，底层用法大概相同。 runtime.mutex 在 sema 的实现方案下（不同系统决定着实现方案的不同），底层依赖 m.mOS.mutex 和 m.mOS.cond 来]]></description>
</item>
<item>
    <title>3. runtime之lockRank锁排名机制</title>
    <link>https://xsc.scccc.cn/3.-runtime%E4%B9%8Blockrank%E9%94%81%E6%8E%92%E5%90%8D%E6%9C%BA%E5%88%B6/</link>
    <pubDate>Sun, 04 Sep 2022 01:38:00 &#43;0800</pubDate>
    <author>Xsc</author>
    <guid>https://xsc.scccc.cn/3.-runtime%E4%B9%8Blockrank%E9%94%81%E6%8E%92%E5%90%8D%E6%9C%BA%E5%88%B6/</guid>
    <description><![CDATA[在runtime.mutex中内嵌了一个叫lockRankStruct的结构体，看名字我们就知道是做锁排名的。mutex我们在runtime]]></description>
</item>
<item>
    <title>2. runtime之notifyList条件唤醒</title>
    <link>https://xsc.scccc.cn/2.-runtime%E4%B9%8Bnotifylist%E6%9D%A1%E4%BB%B6%E5%94%A4%E9%86%92/</link>
    <pubDate>Sat, 03 Sep 2022 17:51:00 &#43;0800</pubDate>
    <author>Xsc</author>
    <guid>https://xsc.scccc.cn/2.-runtime%E4%B9%8Bnotifylist%E6%9D%A1%E4%BB%B6%E5%94%A4%E9%86%92/</guid>
    <description><![CDATA[假如我们去餐馆吃饭，下单后会给你一个编号，然后你等着叫号拿菜就好了。 我们去下单了，把我们就记录到系统里面了wait+1 叫号Signal，他会]]></description>
</item>
<item>
    <title>1. runtime之sema信号锁</title>
    <link>https://xsc.scccc.cn/1.-runtime%E4%B9%8Bsema%E4%BF%A1%E5%8F%B7%E9%94%81/</link>
    <pubDate>Sat, 03 Sep 2022 17:17:00 &#43;0800</pubDate>
    <author>Xsc</author>
    <guid>https://xsc.scccc.cn/1.-runtime%E4%B9%8Bsema%E4%BF%A1%E5%8F%B7%E9%94%81/</guid>
    <description><![CDATA[假如我们有一个宰🐷厂sema，里面有很多的危险工具，比如刀。 我们有好几个仓库（不同的addr），里面放着各种各样的刀，每个仓库它们都记录着有]]></description>
</item>
</channel>
</rss>
